class Solution {
    public int maxProfit(int[] prices) {
        int n=prices.length;
        int[][] dp=new int[n][2];
        for(int i=0;i<n;i++){
            dp[i][0]=-1;
            dp[i][1]=-1;
        }
        return solve(prices,0,0,dp);
        
    }
    public int solve(int[] prices,int ind,int buy,int[][] dp){
        if(ind==prices.length){
            return 0;
        }
        if(dp[ind][buy]!=-1){
            return dp[ind][buy];
        }
        if(buy==0){
            dp[ind][buy]=Math.max(solve(prices,ind+1,0,dp),-prices[ind]+solve(prices,ind+1,1,dp));
        }else{
            dp[ind][buy]=Math.max(prices[ind]+solve(prices,ind+1,0,dp),solve(prices,ind+1,1,dp));
        }
        return dp[ind][buy];
    }
}
